{"ast":null,"code":"var _jsxFileName = \"/Users/serhiikotcinskiy/Documents/JS 59/goit-react-hw-03-phonebook/src/components/App.jsx\";\nimport { Component } from 'react';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport { nanoid } from 'nanoid';\nimport { AppContainer } from './App.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [],\n      filter: ''\n    };\n\n    this.addContact = (name, number, id) => {\n      console.log(name, number, id);\n      const contact = {\n        id: nanoid(),\n        name,\n        number\n      };\n      const findContact = this.state.contacts.find(contact => contact.name.toLowerCase().includes(name.toLowerCase()));\n      findContact ? alert(`${name} is already in contact`) : this.setState(_ref => {\n        let {\n          contacts\n        } = _ref;\n        return {\n          contacts: [contact, ...contacts]\n        };\n      });\n    };\n\n    this.formSubmitHandler = data => {\n      console.log(data);\n    };\n\n    this.deleteContact = contactId => {\n      this.setState(prevState => ({\n        contacts: prevState.contacts.filter(contact => contact.id !== contactId)\n      }));\n    };\n\n    this.changeFilter = event => {\n      this.setState({\n        filter: event.currentTarget.value\n      });\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) ;\n    localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n  }\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({\n        contacts: parsedContacts\n      });\n    }\n  }\n\n  render() {\n    const {\n      contacts,\n      filter\n    } = this.state;\n    const normalizeFilter = filter.toLowerCase();\n    const visibleContacts = contacts.filter(contact => contact.name.toLowerCase().includes(normalizeFilter));\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(AppContainer, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Phonebook\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n          onSubmit: this.addContact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Contacts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Filter, {\n          value: filter,\n          onChange: this.changeFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n          contacts: visibleContacts,\n          onDeleteContact: this.deleteContact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}","map":{"version":3,"sources":["/Users/serhiikotcinskiy/Documents/JS 59/goit-react-hw-03-phonebook/src/components/App.jsx"],"names":["Component","Filter","ContactList","ContactForm","nanoid","AppContainer","App","state","contacts","filter","addContact","name","number","id","console","log","contact","findContact","find","toLowerCase","includes","alert","setState","formSubmitHandler","data","deleteContact","contactId","prevState","changeFilter","event","currentTarget","value","componentDidUpdate","prevProps","localStorage","setItem","JSON","stringify","componentDidMount","getItem","parsedContacts","parse","render","normalizeFilter","visibleContacts"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport { nanoid } from 'nanoid';\nimport { AppContainer } from './App.styled';\n\nexport class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  addContact = (name, number, id) => {\n    console.log(name, number, id);\n    const contact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    const findContact = this.state.contacts.find(contact =>\n      contact.name.toLowerCase().includes(name.toLowerCase())\n    );\n\n    findContact\n      ? alert(`${name} is already in contact`)\n      : this.setState(({ contacts }) => ({\n          contacts: [contact, ...contacts],\n        }));\n  };\n\n  formSubmitHandler = data => {\n    console.log(data);\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts);\n    localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n  }\n\n  componentDidMount() {\n   \n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({contacts:parsedContacts})\n    }\n    \n  }\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    const normalizeFilter = filter.toLowerCase();\n    const visibleContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter)\n    );\n\n    return (\n      <>\n        <AppContainer>\n          <h2>Phonebook</h2>\n\n          <ContactForm onSubmit={this.addContact} />\n\n          <h2>Contacts</h2>\n\n          <Filter value={filter} onChange={this.changeFilter} />\n          <ContactList\n            contacts={visibleContacts}\n            onDeleteContact={this.deleteContact}\n          />\n        </AppContainer>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}